<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="base.mapper.ApproveoldMapper" >
  <resultMap id="BaseResultMap" type="base.model.Approveold" >
    <id column="logid" property="logid" jdbcType="INTEGER" />
    <result column="classid" property="classid" jdbcType="INTEGER" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="maxnumber" property="maxnumber" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="begindate" property="begindate" jdbcType="DATE" />
    <result column="enddate" property="enddate" jdbcType="DATE" />
    <result column="modifydate" property="modifydate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logid, classid, classname, maxnumber, description, price, begindate, enddate, modifydate, 
    state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="base.model.ApproveoldExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from approveold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from approveold
    where logid = #{logid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from approveold
    where logid = #{logid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="base.model.ApproveoldExample" >
    delete from approveold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="base.model.Approveold" >
    insert into approveold (logid, classid, classname, 
      maxnumber, description, price, 
      begindate, enddate, modifydate, 
      state)
    values (#{logid,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, 
      #{maxnumber,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{begindate,jdbcType=DATE}, #{enddate,jdbcType=DATE}, #{modifydate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="base.model.Approveold" >
    insert into approveold
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        logid,
      </if>
      <if test="classid != null" >
        classid,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="maxnumber != null" >
        maxnumber,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="begindate != null" >
        begindate,
      </if>
      <if test="enddate != null" >
        enddate,
      </if>
      <if test="modifydate != null" >
        modifydate,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        #{logid,jdbcType=INTEGER},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="maxnumber != null" >
        #{maxnumber,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="begindate != null" >
        #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=DATE},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="base.model.ApproveoldExample" resultType="java.lang.Integer" >
    select count(*) from approveold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update approveold
    <set >
      <if test="record.logid != null" >
        logid = #{record.logid,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null" >
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null" >
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.maxnumber != null" >
        maxnumber = #{record.maxnumber,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.begindate != null" >
        begindate = #{record.begindate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null" >
        enddate = #{record.enddate,jdbcType=DATE},
      </if>
      <if test="record.modifydate != null" >
        modifydate = #{record.modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update approveold
    set logid = #{record.logid,jdbcType=INTEGER},
      classid = #{record.classid,jdbcType=INTEGER},
      classname = #{record.classname,jdbcType=VARCHAR},
      maxnumber = #{record.maxnumber,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      begindate = #{record.begindate,jdbcType=DATE},
      enddate = #{record.enddate,jdbcType=DATE},
      modifydate = #{record.modifydate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="base.model.Approveold" >
    update approveold
    <set >
      <if test="classid != null" >
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="maxnumber != null" >
        maxnumber = #{maxnumber,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="begindate != null" >
        begindate = #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        enddate = #{enddate,jdbcType=DATE},
      </if>
      <if test="modifydate != null" >
        modifydate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where logid = #{logid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="base.model.Approveold" >
    update approveold
    set classid = #{classid,jdbcType=INTEGER},
      classname = #{classname,jdbcType=VARCHAR},
      maxnumber = #{maxnumber,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      begindate = #{begindate,jdbcType=DATE},
      enddate = #{enddate,jdbcType=DATE},
      modifydate = #{modifydate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where logid = #{logid,jdbcType=INTEGER}
  </update>
</mapper>